{"repository_name":"github.com/DannyBen/clipper","body":"# Clipper - Pure Command Line Arguments Parser\n\n[![Build Status](https://travis-ci.com/DannyBen/clipper.svg?branch=master)](https://travis-ci.com/DannyBen/clipper)\n\nClipper is a small wrapper around the standard `OptionParser` with these \nconceptual changes:\n\n1. It supports positional arguments (commands or positional parameters).\n2. It simply returns a hash of all the expected flags and positional \n   arguments.\n3. It is designed to let you separate the command line parsing from your\n   actual implementation.\n4. It does not concern itself with any help or usage strings - you need to \n   bring your own.\n5. It stays out of your way.\n\nClipper does not assume anything about how you wish to build your command\nline utility, or how you wish to display its usage.\n\n\n## Installation\n\n\nAdd the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  clipper:\n    github: dannyben/clipper\n```\n\nThen run `shards install`\n\n\n## Usage\n\nClipper contains three methods only:\n\n- `#flag` - specify which flags are expected.\n- `#arg` - specify which positional arguments are expected.\n- `#parse` - convert the `ARGV` array to a Hash of all expected and actual\n   options.\n\n```crystal\nrequire \"clipper\"\n\n# Create a clipper instance:\nclipper = Clipper.new\n\n# Specify which flags are expected, using one of these general patterns:\nclipper.flag \"--cache\", \"-c\"\nclipper.flag \"--long-only\"\nclipper.flag \"--port PORT\", \"-p PORT\", default: \"3000\"\n\n# If you care about any positional arguments, give them a name by using this\n# pattern:\nclipper.arg \"command\"\n\n# Finally, parse the options:\noptions = clipper.parse\n# => {\"--cache\" => false, \"--long-only\" => false, \n# =>  \"--port\" => \"3000\", \"command\" => false}\n\noptions = clipper.parse [\"--cache\", \"-p\", \"4567\"]\n# => {\"--cache\" => true, \"--long-only\" => false,\n# =>  \"--port\" => \"4567\", \"command\" => false}\n\noptions = clipper.parse [\"download\"]\n# => {\"--cache\" => true, \"--long-only\" => false,\n# =>  \"--port\" => \"4567\", \"command\" => \"download\"}\n```\n\nFor more advanced examples, see the\n[examples folder](https://github.com/DannyBen/clipper/tree/master/examples).\n\n","program":{"html_id":"github.com/DannyBen/clipper/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/DannyBen/clipper","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/DannyBen/clipper/Clipper","path":"Clipper.html","kind":"class","full_name":"Clipper","name":"Clipper","abstract":false,"superclass":{"html_id":"github.com/DannyBen/clipper/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/DannyBen/clipper/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/DannyBen/clipper/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clipper.cr","line_number":5,"url":"https://github.com/DannyBen/clipper/blob/9a6b7b66d40245ee97e68104834b1913202c3a77/src/clipper.cr"}],"repository_name":"github.com/DannyBen/clipper","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Clipper` lets you convert the ARGV array into a hash of all the expected\nand optional flags and arguments.","summary":"<p><code><a href=\"Clipper.html\">Clipper</a></code> lets you convert the ARGV array into a hash of all the expected and optional flags and arguments.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"arg(name)-instance-method","html_id":"arg(name)-instance-method","name":"arg","doc":"Specifies an expected positional argument.\n\nUse this method to capture any positional argument that is not associated\nwith any flag. This is useful to capture sub-commands:\n\n    clipper = Clipper.new\n    clipper.arg \"command\"\n    options = clipper.parse [\"download\", \"the-internet\"]\n    options[\"command\"]  # => \"download\"\n\nor, to capture positional arguments for a command:\n\n    clipper.arg \"source\"\n    clipper.arg \"target\"\n    options = clipper.parse [\"source.txt\"]\n    options[\"source\"]  # => \"source.txt\"\n    options[\"target\"]  # => false\n","summary":"<p>Specifies an expected positional argument.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/DannyBen/clipper/blob/9a6b7b66d40245ee97e68104834b1913202c3a77/src/clipper.cr#L43","def":{"name":"arg","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"arg_keys << name"}},{"id":"flag(long,short=nil,default=false)-instance-method","html_id":"flag(long,short=nil,default=false)-instance-method","name":"flag","doc":"Specifies an expected flag.\n\nAfter running `#parse`, the value provided by the user will be available\nusing the *long* key.\n\n    clipper = Clipper.new\n    clipper.flag \"--port PORT\", \"-p PORT\", default: \"3000\"\n    options = clipper.parse ARGV\n    options[\"--port\"]  # => \"3000\"\n\nBoth the *short* key and *default* value are optional.\n","summary":"<p>Specifies an expected flag.</p>","abstract":false,"args":[{"name":"long","doc":null,"default_value":"","external_name":"long","restriction":""},{"name":"short","doc":null,"default_value":"nil","external_name":"short","restriction":""},{"name":"default","doc":null,"default_value":"false","external_name":"default","restriction":""}],"args_string":"(long, short = <span class=\"n\">nil</span>, default = <span class=\"n\">false</span>)","source_link":"https://github.com/DannyBen/clipper/blob/9a6b7b66d40245ee97e68104834b1913202c3a77/src/clipper.cr#L18","def":{"name":"flag","args":[{"name":"long","doc":null,"default_value":"","external_name":"long","restriction":""},{"name":"short","doc":null,"default_value":"nil","external_name":"short","restriction":""},{"name":"default","doc":null,"default_value":"false","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"key = (long.split(' ')).first\ninput[key] = default\nregister(key, long, short)\n"}},{"id":"parse(args=[]ofString)-instance-method","html_id":"parse(args=[]ofString)-instance-method","name":"parse","doc":"Parses a array and returns a hash of expected and actual options.\n\nThis method typically expects ARGV as its input array.\n\n```\nclipper = Clipper.new\n\nclipper.flag \"--cache\", \"-c\"\nclipper.flag \"--long-only\"\nclipper.flag \"--port PORT\", \"-p PORT\", default: \"3000\"\nclipper.arg \"command\"\n\noptions = clipper.parse\n# => {\"--cache\" => false, \"--long-only\" => false,\n# => \"--port\" => \"3000\", \"command\" => false}\n\noptions = clipper.parse [\"--cache\", \"-p\", \"4567\"]\n# => {\"--cache\" => true, \"--long-only\" => false,\n# => \"--port\" => \"4567\", \"command\" => false}\n\noptions = clipper.parse [\"download\"]\n# => {\"--cache\" => true, \"--long-only\" => false,\n# => \"--port\" => \"4567\", \"command\" => \"download\"}\n```\n","summary":"<p>Parses a array and returns a hash of expected and actual options.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"[] of String","external_name":"args","restriction":""}],"args_string":"(args = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>)","source_link":"https://github.com/DannyBen/clipper/blob/9a6b7b66d40245ee97e68104834b1913202c3a77/src/clipper.cr#L72","def":{"name":"parse","args":[{"name":"args","doc":null,"default_value":"[] of String","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"args = args.dup\nparser.invalid_option do\nend\nparser.parse(args)\nappend_named_args(args)\ninput\n"}}],"macros":[],"types":[]}]}}